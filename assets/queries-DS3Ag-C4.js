import{W as n,an as a,bP as c,Z as y,aZ as d,ao as u,c2 as l,c3 as p,c4 as f,c5 as j,c6 as w,c7 as x}from"./index-BCN26Ft_.js";function L(){const e=n();return a({queryKey:["liteproxy-list",e||void 0],queryFn:async()=>{if(!e)return[];const{data:r,error:t}=await j({query:{project_id:e}});if(t){if(t.error==="keys not found")return[];throw t}return r.keys},enabled:!!e,staleTime:30*1e3})}function T(){return a({queryKey:["liteproxy-tiers"],queryFn:async()=>{const{data:e,error:r}=await w();if(r)throw r;return e.tiers},staleTime:5*60*1e3})}function h(){const e=c();return a({queryKey:["selected-liteproxy-tier",(e==null?void 0:e.id)||void 0],queryFn:async()=>{if(!e)return null;const{data:r,error:t}=await x({query:{project_id:e.id}});if(t)throw t;return r.tier},enabled:!!e,staleTime:30*1e3})}function b(){return h()}function C(){const e=y(),r=n(),t=d();return u({mutationFn:async()=>{const s=r;if(!s)throw new Error("Project not selected");const{data:o,error:i}=await l({query:{project_id:s}});if(i)throw i;return{keys:o.keys,_projectId:s}},onSuccess:s=>{e.invalidateQueries({queryKey:["liteproxy-list",s._projectId]}),t({title:"Api key has been created successfully",status:"success",duration:3e3,isClosable:!0})},onError:()=>{t({title:"Api key wasn't created",status:"error",duration:3e3,isClosable:!0})}})}function I(){const e=y(),r=n(),t=d();return u({mutationFn:async s=>{const o=r;if(!o)throw new Error("Project not selected");const{error:i}=await f({query:{project_id:o},body:{tier_id:s}});if(i)throw i;return{tierId:s,_projectId:o}},onSuccess:s=>{e.invalidateQueries({queryKey:["selected-liteproxy-tier",s._projectId]}),t({title:"Successful purchase",status:"success",duration:3e3,isClosable:!0})},onError:()=>{t({title:"Unsuccessful purchase",status:"error",duration:3e3,isClosable:!0})}})}function P(){const e=c();return u({mutationFn:async r=>{const t=e==null?void 0:e.id;if(!t)throw new Error("Project not selected");const{data:s,error:o}=await p({path:{id:r},query:{project_id:t}});if(o)throw o;return s}})}export{I as a,T as b,h as c,P as d,C as e,L as f,b as u};
