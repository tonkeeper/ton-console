================================================================================
MobX → React Query + useContext MIGRATION SUMMARY
================================================================================

OVERVIEW:
- 21 total MobX stores across the codebase
- 15 stores depend on ProjectsStore (critical hub)
- Migration approach: Phase-by-phase, starting with simple stores

PHASES:

PHASE 1 (2-3 days): React Query Migration - Leaf Stores
├─ TonApiStatsStore → queries.ts
├─ LiteproxysStore → queries.ts
├─ RestApiTiersStore → queries.ts
├─ CNFTStore → queries.ts
└─ FaucetStore → queries.ts
Pattern: useQuery + useProjectId() from ProjectIdContext

PHASE 1.5 (0.5-1 day): Replace projectsStore References
└─ grep & replace all `projectsStore.selectedProject?.id` with `useProjectId()`

PHASE 2 (2-3 days): Remaining Simple Stores + Table Store Localization
├─ JettonStore → queries.ts
├─ DappStore → queries.ts
├─ InvoicesTableStore → localize to component (constructor: projectId)
└─ AnalyticsHistoryTableStore → localize to component (constructor: projectId)
Pattern for table stores: Keep MobX, just move to component scope with dependency injection

PHASE 2.5 (2-3 days): Complex Store Localization (Minimal Effort)
├─ AppMessagesStore → localize to component (constructor: projectId, dappStore)
├─ InvoicesAppStore → localize to component (constructor: projectId)
└─ AnalyticsQueryStore + supporting stores → localize to analytics feature
Pattern: NO logic changes - just move from global to local scope with constructor params

PHASE 3 (1-2 days): ProjectsStore Removal - CRITICAL
├─ Create src/shared/queries/projects.ts
├─ Delete src/entities/project/model/projects.store.ts
└─ All 15 dependent stores must be migrated FIRST
Prerequisite: All phases 1, 1.5, 2, 2.5 complete

PHASE 4 (1-2 days): Final Global Stores
├─ UserStore (decision: migrate or keep as exception)
└─ AppStore → useAppInitialized() hook

================================================================================
KEY PATTERN FOR PHASE 2+ LOCALIZATION (Minimal Effort):

Before:
  class InvoicesTableStore {
    constructor() { makeObservable(this); }
    invoices$ = new Loadable<Invoice[]>();
  }
  
  const invoicesTableStore = new InvoicesTableStore();
  export default invoicesTableStore;

After:
  class InvoicesTableStore {
    constructor(private projectId: string | null) { 
      makeObservable(this); 
    }
    invoices$ = new Loadable<Invoice[]>();
    // ALL logic stays the same, just use this.projectId
  }
  
  // In component:
  const [tableStore] = useState(() => new InvoicesTableStore(projectId));
  return <InvoicesTable store={tableStore} />;

Benefits: Minimal code changes, works immediately, removes global dependency

================================================================================
CRITICAL RISKS:

1. ProjectsStore Avalanche (15 dependencies)
   → Mitigation: Strict phase ordering, frequent testing

2. localStorage Persistence
   → selectedProjectId must persist across refresh
   → Test: Login → Select Project → Refresh → Should persist

3. Race Conditions (projectId changes during request)
   → Already mitigated by ProjectIdContext
   → Pattern: Capture projectId in mutationFn, return it

4. Table Store Complexity (438 LOC + 191 LOC)
   → Localization approach minimizes this
   → Keep MobX logic, just move scope

================================================================================
SUCCESS CRITERIA PER PHASE:

Phase 1: All 5 leaf stores migrated to queries.ts, no observer() wrappers
Phase 1.5: projectsStore grep returns <10 matches (exceptions only)
Phase 2: Simple stores migrated, table stores localized, work identically
Phase 2.5: Complex stores localized, MobX intact, global scope removed
Phase 3: ProjectsStore deleted, all stores use ProjectIdContext
Phase 4: Remaining stores migrated or explicitly documented as exceptions

================================================================================
TIMELINE: 9-14 days total

Phase 1: 2-3 days
Phase 1.5: 0.5-1 day
Phase 2: 2-3 days
Phase 2.5: 2-3 days
Phase 3: 1-2 days (highest risk)
Phase 4: 1-2 days

================================================================================
REFERENCE: See MIGRATION_PLAN.md for detailed information
================================================================================
